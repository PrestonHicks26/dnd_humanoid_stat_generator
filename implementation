-MVC Design Pattern
  -implemented so that all the logic is stored in the model, not the controller
-Controllers
  -generator controller
  -export controller
  -external requests controller
-Models
  -statblock
    - contains logic balancing difficulty of generated statblock
    - generator has a 'point' budget based on CR
      - settings determine how many 'points' are allocated to each part of the statblock
        - ex. 'mixed' statblock has even distribution of points to spend on spells and on abilities, 'magic' statblock has larger share of point to spend on spells
      - elements can have more or fewer points, meaning statblock may have a small number of powerful elements or large number of weaker elements
  -settings
  -npc traits
  -model for each aspect of statblock generation
-Views
  -Main view
  -Export statblock
-Data
  -structure:
    -json
    -[{name: '',
      origin: '',
        tags: [
              ]
      },
    ]
      
  - mark origin (src, third party, custom, wizardsNonSrc) in trait object properties
  -data files:
    -monster types (ie. Beast, Undead, etc)
    -armors
    -weapons
    -skills
    -conditions
    -abilities
    -actions
    -bonus actions
    -reactions
    -spells
    -legendary reactions
    -lair actions
    -villain actions (action oriented monsters)
    -magic items

  

